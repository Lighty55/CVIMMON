- name: Gathering facts from all hosts
  hosts: host_all
  tasks: [ ]

# Disable galera backend in haproxy
- hosts: mariadb_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{sudo_required }}"
  tasks:
  - stat: path={{ lookup('env', 'HOME') }}/openstack-configs/staging_secrets.yaml
    register: staging_file
    delegate_to: localhost

  - name: Find out if galera reconfigure is part of update
    shell: diff {{ lookup('env', 'HOME') }}/openstack-configs/secrets.yaml  {{ lookup('env', 'HOME') }}/openstack-configs/staging_secrets.yaml | grep "DB_ROOT_PASSWORD\|WSREP_PASSWORD"
    no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
    ignore_errors: True
    failed_when: false
    delegate_to: localhost
    register: reconfigure_needed

  - name: Disable galera backend in haproxy
    file:
      path: "/var/tmp/clustercheck.disabled"
      state: touch
    when: reconfigure_needed.stdout != "" and staging_file.stat.exists

  - pause: seconds=60 prompt="Waiting for sometime for in-transit transactions"
    when: reconfigure_needed.stdout != "" and staging_file.stat.exists
  tags:
    - base
    - mariadb-app

- name: Install and Start Galera-MariaDB Containarized service.
  hosts: mariadb_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{sudo_required }}"
  roles:
    - { role: "galera", tags: [ "base", "mariadb-app" ] }
  serial: "30%"

# Bring back the galera backend
- hosts: mariadb_all
  tasks:
  - name: Bring galera backend into service
    file:
      path: "/var/tmp/clustercheck.disabled"
      state: absent
    tags:
      - base
      - mariadb-app


# Perform the xinetd check
- hosts: mariadb_all
  tasks:
  - include: roles/galera/tasks/galera_service_clustercheck.yaml

- hosts: mariadb_all
  tasks:
  - name: Check cluster size
    shell: mysql -h {{ internal_lb_vip_address }} -uroot -p{{ DB_ROOT_PASSWORD }} -e "SHOW STATUS LIKE 'wsrep_cluster_size'" | grep wsrep_cluster_size | sed -e 's/wsrep_cluster_size\t//'
    no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
    register: cluster_size
    until: cluster_size.stdout == "{{ groups['mariadb_mgmt_ip'] | length }}"
    retries: 30
    delay: 6
    tags:
      - mariadb-app
      - base
