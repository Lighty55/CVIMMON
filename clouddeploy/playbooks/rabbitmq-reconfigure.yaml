- name: Gathering facts from all hosts
  hosts: host_all
  tasks: [ ]

- name: Install and start  RabbitMQ Containarized service.
  hosts: rabbitmq_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{sudo_required }}"
  roles:
    - { role: "rabbitmq", tags: [ "base", "rabbitmq" ] }
  serial: "30%"

- name: Validate RabbitMQ cluster.
  hosts: opsmonit_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  tasks:
    - name: Execute RabbitMQ cluster cmd
      rabbitmq_monit:
        operation: check_cluster_size
        username: "{{ RABBITMQ_USER }}"
        password: "{{ RABBITMQ_PASSWORD }}"
        image_tag: "{{ docker.rabbitmq.image_tag }}"
        clust_sz: "{{ groups['rabbitmq_all'] | length }}"
      register: validation_status
      until: validation_status.result.status == 'PASS'
      retries: 30
      delay: 6
      when: (ACTION is defined and ACTION == "update") or (ACTION is defined and ACTION == "reconfigure")
    - name: Execute RabbitMQ cluster cmd
      rabbitmq_monit:
        operation: check_cluster_size
        username: "{{ RABBITMQ_USER }}"
        password: "{{ RABBITMQ_PASSWORD }}"
        image_tag: "{{ RABBITMQ_PREVIOUS_TAG }}"
        clust_sz: "{{ groups['rabbitmq_all'] | length }}"
      register: validation_status
      until: validation_status.result.status == 'PASS'
      retries: 30
      delay: 6
      when: (ACTION is defined and ACTION == "rollback")
  tags:
    - base
    - rabbitmq
