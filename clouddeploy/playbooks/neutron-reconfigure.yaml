- name: Update Neutron Common Containerized service.
  hosts: host_common
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-common", tags: [ "base", "neutron-common" ] }
  serial: "30%"

- name: Update etcd peer Containerized service.
  hosts: etcd_all{{server|default('')}}
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "etcd-bootstrap", tags: [ "vpp", "etcd", "etcd-install" ], when: "SKIP_UPGRADE is defined"  }
  serial: "30%"

- name: Update etcd peer Containerized service.
  hosts: etcd_all{{server|default('')}}
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "etcd", tags: [ "vpp", "etcd", "etcd-install" ] }
  serial: "{% if SKIP_UPGRADE is defined %}{{ skip_undefined | default('100%') }}{% else %}{{ skip_undefined | default('30%') }}{% endif %}"

- name: GoBGP and GoBGP-agent install
  hosts: gobgp_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "gobgp", tags: [ "vpp", "gobgp" ], when: "ACTION is defined and ACTION == 'upgrade'"  }
  serial: "30%"

- name: Update Neutron Server Containerized service.
  hosts: neutron_server_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-server", tags: [ "base", "neutron-server" ] }
  serial: "30%"

- name: Update AIM Event RPC Containerized service.
  hosts: neutron_server_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "aim-event-rpc", tags: [ "aci", "aim-event-rpc" ] }
  serial: "30%"

- name: Update AIM Event Polling Containerized service.
  hosts: neutron_server_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "aim-event-polling", tags: [ "aci", "aim-event-polling" ] }
  serial: "30%"

- name: Update AIM AID Containerized service.
  hosts: neutron_server_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "aim-aid", tags: [ "aci", "aim-aid" ] }
  serial: "30%"

- name: Update Neutron VTF Containerized service.
  hosts: neutron_vtf_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-vtf", tags: [ "vts", "neutron-vtf" ] }
  serial: "30%"

- name: Update Neutron VPP Containerized service.
  hosts: neutron_vpp_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-vpp", tags: [ "vpp", "neutron-vpp" ]  }
  serial: "30%"

- name: Ensure VPP starts in all controllers before L3 agent and DHCP are up.
  hosts: etcd_all{{server|default('')}}
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  tasks:
     - name: Get etcd container name
       shell: docker ps -a | grep etcd | grep Up |awk '{print $NF}'
       register: etcd_name
       when: MECHANISM_DRIVERS == "vpp"

     - name: Check if the VPP agent is alive in etcd
       shell: docker exec {{ etcd_name.stdout }} etcdctl get /networking-vpp/state/{{ ansible_nodename }}/alive
       register: etcd_status
       until: etcd_status.rc == 0 and etcd_status.stdout == "1"
       retries: 10
       delay: 6
       when: MECHANISM_DRIVERS == "vpp"
  tags:
      - vpp
      - neutron-vpp

- name: Upgrade ovs dbserver.
  hosts: ovs_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "ovs_dbserver", tags: [  "openvswitch", "ovs_dbserver" ] }
  serial: "30%"

- name: Upgrade openvswitch Agent Containerized service.
  hosts: ovs_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "ovs_vswitch", tags: [  "openvswitch", "ovs_vswitch" ] }
  serial: "30%"

- name: Update Neutron Linuxbridge Containerized service.
  hosts: neutron_linuxbridge_agent_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-linuxbridge", tags: [ "linuxbridge", "neutron-linuxbridge" ] }
  serial: "30%"

- name: Update Neutron OVS Containerized service.
  hosts: ovs_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-ovs", tags: [ "openvswitch", "neutron-ovs" ] }
  serial: "30%"

- name: Update Neutron SRIOV Containerized service.
  hosts: nova_compute_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-sriov", tags: [ "openvswitch", "neutron-sriov" ] }
  serial: "30%"

- name: Update neutron opflex agent service.
  hosts: ovs_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-opflex-agent", tags: [ "aci", "neutron-opflex-agent" ] }
  serial: "30%"

  # Ignoring errors because nova compute rabbit password will go out of sync
  # during regenerate and the service won't start.
- hosts: nova_compute_all
  tasks:
  - name: Start all nova compute services
    service:
      name: docker-novacpu
      enabled: yes
      state: started
    tags:
      - base
      - neutron-linuxbridge
      - neutron-ovs
      - neutron-vtf
      - neutron-opflex-agent
      - neutron-sriov
    ignore_errors: True
    failed_when: False

- name: Update Neutron DHCP Containerized service.
  hosts: neutron_dhcp_agent_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-dhcp", tags: [ "base", "neutron-dhcp", "neutron-dhcp-ovs" ] }
  serial: "30%"

- name: Update Neutron L3 Containerized service.
  hosts: neutron_l3_agent_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-l3", tags: [ "openvswitch", "vpp", "linuxbridge", "neutron-l3", "neutron-l3-ovs" ] }
  serial: "30%"

- name: Update Neutron Lbaas Containerized service.
  hosts: neutron_lbaas_agent_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-lbaas", tags: [ "lbaas", "neutron-lbaas" ] }
  serial: "30%"

- name: Update Neutron Metadata Containerized service.
  hosts: neutron_metadata_agent_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "neutron-metadata", tags: [ "openvswitch", "vpp", "vts", "linuxbridge",  "neutron-metadata" ] }
  serial: "30%"
