- name: Gathering facts from all hosts
  hosts: host_power_all
  tasks: [ ]

- include: user_group_setup.yaml

- name: Check Ansible connectivity to all hosts
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh # or paramiko
  max_fail_percentage: 0
  tasks:
    - name: check host connectivity
      shell: echo " {{ hostvars[item]['ansible_hostname'] }}"
      with_items: "{{ groups['host_power_all'] }}"
      register: cmd_output
  tags:
    - host_setup

# Note: /etc/hosts need to be updated for all hosts irrespective of operation
# be it install or pod management for replace controller or add-*
- name: Update /etc/hosts
  hosts: host_power_all
  tasks:
    - name: Update mgmt node entry in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        state: present
        line: "{{ item }} {{ groups['mgmt']|join('') }} {{ groups['mgmt']|join('') }}"
      when: item != "" and item != "0.0.0.0" and item != "::"
      with_items:
        - "{{ build_node_ip }}"

    - name: Update IPv4 /etc/hosts
      lineinfile:
        dest: /etc/hosts
        state: present
        line: "{{ item }} {{hostvars[item]['ansible_hostname']}} {{ hostvars[item]['ansible_nodename'] }}"
      with_items: "{{ groups['host_power_all'] }}"

    - name: Update IPv6 /etc/hosts
      lineinfile:
        dest: /etc/hosts
        state: present
        line: "{{ hostvars[item]['management_ipv6'] }} {{hostvars[item]['ansible_hostname']}} {{ hostvars[item]['ansible_nodename'] }}"
      when: hostvars[item]['management_ipv6'] is defined
      with_items: "{{ groups['host_power_all'] }}"
  tags:
    - host_setup
    - hostname

- name: Initial Host setup
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh # or paramiko
  max_fail_percentage: 0
  roles:
    - { role: host_setup, host_init: true, host_post_init: false }
  tags:
    - host_setup

- include: ntp-setup.yaml

- name: Basic host setup
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh
  max_fail_percentage: 0
  roles:
    - { role: host_setup, host_init: false, host_post_init: true }
  tags:
    - host_setup

- name: Edge POD BIOS update
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh # or paramiko
  max_fail_percentage: 0
  roles:
  - { role: edge-pod-bios-update, tags: [ "host_setup" ] }

- name: Edge POD accelerated compute firmware update
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh # or paramiko
  max_fail_percentage: 0
  roles:
  - { role: n3000-firmware-update, tags: [ "host_setup" ], firmware_check: false, firmware_update: true }

- name: Set docker aliases.
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh # or paramiko
  max_fail_percentage: 0
  roles:
  - { role: set_aliases, tags: [ "host_setup", "set_aliases"] }

- name: Install the cvimlog scripts in all nodes
  hosts: host_power_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  connection: ssh
  any_errors_fatal: True
  tags:
    - host_setup
  tasks:
    - name: Create tools directory
      file: path="/root/tools" state=directory mode=0755

    - name: Copy files into the nodes
      synchronize:
          src: "{{ playbook_dir | dirname }}/remote_tools/"
          dest: "/root/tools/"
          copy_links: yes

    - name: Install cvimlog
      shell: cd /root/tools ; python setup.py install
      ignore_errors: True
      failed_when: False

- name: Install fluentd onto all nodes
  hosts: host_power_all{{server|default('')}}
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "fluentd", tags: [ "host_setup", "fluentd" ] }

- name: IPA Client Configuration for all hosts
  hosts: host_power_all{{server|default('')}}
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  roles:
    - { role: "ipa-config", tags: [ "host_setup", "ipa-config" ] }

