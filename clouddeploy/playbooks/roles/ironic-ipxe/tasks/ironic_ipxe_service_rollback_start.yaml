# First remove the new container and artifacts
- name: Shut off Ironic iPXE docker service
  service:
    name: docker-ironicipxe
    enabled: no
    state: stopped
  ignore_errors: true
  failed_when: false

- name: Remove Ironic iPXE service file
  file:
    path: "/usr/lib/systemd/system/docker-ironicipxe.service"
    state: absent

- name: Systemctl daemon-reload.
  command: /usr/bin/systemctl daemon-reload

- name: Stop and remove Ironic iPXE docker container.
  docker_container:
    image: "{{ item.image }}"
    name: "{{ item.name }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"
  with_items:
    - { image: "", name: "ironic_ipxe_{{ docker.ironic_ipxe.image_tag }}" }

- name: Remove Ironic iPXE docker image
  docker_image:
    name: "{{ docker.common.registry }}/{{ docker.ironic_ipxe.name }}"
    tag: "{{ docker.ironic_ipxe.image_tag }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"

# Now list and remove ironic volume contents
- name: List Ironic iPXE volume contents
  shell: ls -A1 {{ docker.ironic_ipxe.host_data_dir }}
  register: contents

- name: Remove Ironic iPXE volume contents
  file:
    path: "{{ docker.ironic_ipxe.host_data_dir }}/{{ item }}"
    state: absent
  with_items: "{{ contents.stdout_lines }}"

#  Recover the ironic volume contents
- name: recover Ironic iPXE volume contents
  shell: "cp -r {{ docker.ironic_ipxe.host_data_dir }}_{{ IRONIC_IPXE_PREVIOUS_TAG }}/. {{ docker.ironic_ipxe.host_data_dir }}/"

##########################################
# Copy and enable Service Manager Definition
##########################################
- name: Copy Containers restart-on-boot files.
  command: "cp {{ docker.ironic_ipxe.host_data_dir }}/docker-ironicipxe.service /usr/lib/systemd/system/docker-ironicipxe.service"

- name: Systemctl daemon-reload.
  command: /usr/bin/systemctl daemon-reload

- name: Reset the failures
  shell: systemctl reset-failed

- name: Add aliases to bashrc.
  lineinfile:
    dest: /root/.bashrc
    state: present
    regexp: "alias ironicipxe='in_container ironic_ipxe"
    line: "{{ item }}"
  with_items:
    - alias ironicipxe='in_container ironic_ipxe_{{ IRONIC_IPXE_PREVIOUS_TAG }}'

- name: Start Ironic iPXE container
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - docker-ironicipxe
  tags:
    - reboot-on-failure

- pause: seconds=5 prompt="Waiting for sometime"

- name: Check if Ironic iPXE Docker container has started running
  shell: docker ps -a | grep Up | grep ironic_ipxe_{{ IRONIC_IPXE_PREVIOUS_TAG }} | cut -f1 -d " "
  register: command_result

- name: Fail if Ironic iPXE container is not UP.
  fail: msg="Ironic iPXE Container does not seem to be running"
  when: command_result.stdout == ""

# Now remove the backup volume
- name: Remove back up Ironic iPXE Directory
  file:
    path: "{{ docker.ironic_ipxe.host_data_dir }}_{{ IRONIC_IPXE_PREVIOUS_TAG }}"
    state: absent
