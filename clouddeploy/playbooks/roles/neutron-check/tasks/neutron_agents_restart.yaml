- set_fact:
    ADMIN_USER_PASSWORD: '{{ lookup("hashi_vault", "secret=secret/data/cvim-secrets/ADMIN_USER_PASSWORD:data
  token={{ TOKEN }} url=http://{{ build_node_ip | ipwrap }}:8200")["value"]}}'
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  when: VAULT is defined and VAULT.enabled == True

- name: Check neutron agent list for down state
  environment:
    OS_AUTH_URL: "{{ INTERNAL_PROTOCOL }}://{{ KEYSTONE_ADMIN_SERVICE_HOST }}:{{ KEYSTONE_ADMIN_SERVICE_PORT }}/v3"
    OS_USERNAME: "{{ ADMIN_USER }}"
    OS_PASSWORD: "{{ ADMIN_USER_PASSWORD }}"
    OS_TENANT_NAME: "{{ ADMIN_TENANT_NAME }}"
    OS_REGION_NAME: "RegionOne"
    OS_PROJECT_NAME: "{{ ADMIN_TENANT_NAME }}"
    OS_PROJECT_DOMAIN_NAME: "default"
    OS_USER_DOMAIN_NAME: "default"
    OS_IDENTITY_API_VERSION: 3
  shell: openstack --os-interface internal network agent list -c Binary -c Alive -c Host | awk -F"|" 'match($4,/{{ service_name }}/) && match($3,/:-)/) {gsub(" ","");print $2}'
  register: service_list
  run_once: true
  delegate_to: 127.0.0.1
  failed_when: service_list.stderr != ""
  any_errors_fatal: true

- name: Restart specific neutron agent on down or missing nodes
  service:
    name:  "{{ systemctl_name }}"
    state: restarted
  when: not service_list.stdout | search(hostvars[inventory_hostname].ansible_nodename)

- name: Pause for sometime before checking again
  pause:
    seconds: 60
  register: paused
  when: ( expected_service_list | difference(service_list.stdout_lines) ) | length > 0

- name: Check neutron agent list again for down state
  environment:
    OS_AUTH_URL: "{{ INTERNAL_PROTOCOL }}://{{ KEYSTONE_ADMIN_SERVICE_HOST }}:{{ KEYSTONE_ADMIN_SERVICE_PORT }}/v3"
    OS_USERNAME: "{{ ADMIN_USER }}"
    OS_PASSWORD: "{{ ADMIN_USER_PASSWORD }}"
    OS_TENANT_NAME: "{{ ADMIN_TENANT_NAME }}"
    OS_REGION_NAME: "RegionOne"
    OS_PROJECT_NAME: "{{ ADMIN_TENANT_NAME }}"
    OS_PROJECT_DOMAIN_NAME: "default"
    OS_USER_DOMAIN_NAME: "default"
    OS_IDENTITY_API_VERSION: 3
  shell: openstack --os-interface internal network agent list -c Binary -c Alive -c Host | awk -F"|" 'match($4,/{{ service_name }}/) && match($3,/:-)/) {gsub(" ","");print $2}'
  register: service_up_list
  run_once: true
  delegate_to: 127.0.0.1
  until: "{{ ( expected_service_list | difference(service_up_list.stdout.split()) ) | length == 0 }}"
  retries: 12
  delay: 10
  when: not paused | skipped
