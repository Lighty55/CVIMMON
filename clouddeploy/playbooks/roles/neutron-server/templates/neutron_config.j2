ADMIN_USER: "{{ ADMIN_USER }}"
ADMIN_TENANT_NAME: "{{ ADMIN_TENANT_NAME }}"
SERVICE_TENANT_NAME: "{{ SERVICE_TENANT_NAME }}"
NEUTRON_DB_NAME: "{{ NEUTRON_DB_NAME }}"
NEUTRON_DB_USER: "{{ NEUTRON_DB_USER }}"
NEUTRON_KEYSTONE_USER: "{{ NEUTRON_KEYSTONE_USER }}"
RABBITMQ_HOSTS: {{ RABBITMQ_HOSTS }}
RABBITMQ_PORT: "{{ RABBITMQ_PORT }}"
RABBITMQ_USER: "{{ RABBITMQ_USER }}"
MARIADB_SERVICE_HOST: "{{ MARIADB_SERVICE_HOST | ipwrap }}"
VERBOSE_LOGGING: "{{ NEUTRON_VERBOSE_LOGGING }}"
DEBUG_LOGGING: "{{ NEUTRON_DEBUG_LOGGING }}"
LOGGING_FORMAT_PLAIN: "{{ LOGGING_FORMAT_PLAIN }}"
LOGGING_FORMAT_JSON: "{{ LOGGING_FORMAT_JSON }}"
KEYSTONE_PUBLIC_SERVICE_HOST: "{{ KEYSTONE_PUBLIC_SERVICE_HOST }}"
KEYSTONE_PUBLIC_SERVICE_PORT: "{{ KEYSTONE_PUBLIC_SERVICE_PORT }}"
KEYSTONE_ADMIN_SERVICE_HOST: "{{ KEYSTONE_ADMIN_SERVICE_HOST }}"
KEYSTONE_ADMIN_SERVICE_PORT: "{{ KEYSTONE_ADMIN_SERVICE_PORT }}"
NOVA_KEYSTONE_USER: "{{ NOVA_KEYSTONE_USER }}"
NOVA_API_SERVICE_HOST: "{{ NOVA_API_SERVICE_HOST }}"
NEUTRON_HOST: "{{ NEUTRON_HOST }}"
API_BIND_PORT: "{{ API_BIND_PORT }}"
NEUTRON_SERVER_SERVICE_HOST: "{{ NEUTRON_SERVER_SERVICE_HOST }}"
CORE_PLUGIN: "{{ CORE_PLUGIN }}"
NEUTRON_PLUGIN_LOADED_BASE: "{{ NEUTRON_PLUGIN_LOADED_BASE }}"
ALLOW_OVERLAPPING_IPS: "{{ ALLOW_OVERLAPPING_IPS }}"
TYPE_DRIVERS: "{{ TYPE_DRIVERS }}"
TENANT_NETWORK_TYPES: "{{ TENANT_NETWORK_TYPES }}"
{% if MECHANISM_DRIVERS != "linuxbridge" %}
TENANT_VLAN_RANGES: "{{ TENANT_VLAN_TUPLES|default('') }}"
{# ALL_VLAN_RANGES and PROVIDER_VLAN_RANGES are only used with ACI Unified Plugin #}
PROVIDER_VLAN_RANGES: "{{ PROVIDER_VLAN_TUPLES|default('') }}"
ALL_VLAN_RANGES: "{{ ALL_VLAN_TUPLES|default('') }}"
{% endif %}
MECHANISM_DRIVERS: "{{ MECHANISM_DRIVERS }}"
NETWORK_VLAN_RANGES: "{{ NETWORK_VLAN_RANGES }}"
ENABLE_SECURITY_GROUP: "{{ ENABLE_SECURITY_GROUP }}"
FIREWALL_DRIVER: "{{ FIREWALL_DRIVER }}"
LOCAL_IP: "{{ LOCAL_IP }}"
PUBLIC_PROTOCOL: "{{ PUBLIC_PROTOCOL }}"
INTERNAL_PROTOCOL: {{ INTERNAL_PROTOCOL }}
{% if UCSMCOMMON is defined %}
{% if UCSMCOMMON['ENABLE_UCSM_PLUGIN'] is defined %}
{% if UCSMCOMMON['ENABLE_UCSM_PLUGIN'] == true %}
UCSM_IP: "{{ UCSMCOMMON.ucsm_ip }}"
{% endif %}
{% endif %}
{% endif %}
USE_INTEL: {{ use_intel }}
INTEL_SRIOV: {{ intel_sriov }}
{% if intel_sriov == true %}
SRIOV_INTERFACE_NAME: {{ SRIOV_INTERFACE_NAME }}
SRIOV_PHYSNET_NAME: {{ SRIOV_PHYSNET_NAME }}
SRIOV_PHYSNET_MAPPINGS: {{ sriov_physnet_mappings }}
VENDOR_ID: {{ VENDOR_ID }}
{% endif %}
{% if MECHANISM_DRIVERS == "aci" %}
APIC_USERNAME: {{ APICINFO.apic_username }}
APIC_PASSWORD: {{ APICINFO.apic_password }}
APIC_HOSTS: {{ APICINFO.apic_hosts | join(',') }}
{% endif %}
{% if OPTIONAL_SERVICE_LIST is defined %}
OPTIONAL_SERVICE_LIST: {{ OPTIONAL_SERVICE_LIST|join(',') }}
{% endif %}
{% if ENABLE_ESC_PRIV is defined and ENABLE_ESC_PRIV == true %}
ESC_PRIV: {{ ENABLE_ESC_PRIV }}
{% endif %}
{% if VAULT is defined and VAULT.enabled == True %}
# VAULT
VAULT_TOKEN: {{ TOKEN }}
MGMT_IP: {{ build_node_ip | ipwrap }}
PASSWORD_VARS: {{ PASSWORD_VARS }}
{% else %}
ADMIN_USER_PASSWORD: {{ ADMIN_USER_PASSWORD }}
NEUTRON_DB_PASSWORD: {{ NEUTRON_DB_PASSWORD }}
DB_ROOT_PASSWORD: {{ DB_ROOT_PASSWORD }}
NOVA_KEYSTONE_PASSWORD: {{ NOVA_KEYSTONE_PASSWORD }}
NEUTRON_KEYSTONE_PASSWORD: {{ NEUTRON_KEYSTONE_PASSWORD }}
METADATA_PROXY_SHARED_SECRET: {{ METADATA_PROXY_SHARED_SECRET }}
RABBITMQ_PASSWORD: {{ RABBITMQ_PASSWORD }}
{% endif %}

{% if OPTIONAL_SERVICE_LIST is defined %}
{% if 'ironic' in OPTIONAL_SERVICE_LIST %}
{% if IRONIC.IRONIC_SWITCHDETAILS[0].switch_type == "Nexus" %}
IRONIC_ENABLE: "True"
IRONIC_NETWORK_VLAN: {{ ironic_network.vlan_id }}
IRONIC_SWITCH_HOSTNAME: "{% for i in range(0, IRONIC.IRONIC_SWITCHDETAILS | length) %}{{ IRONIC.IRONIC_SWITCHDETAILS[i].hostname }} {%endfor%}"
IRONIC_SWITCH_USERNAME: "{% for i in range(0, IRONIC.IRONIC_SWITCHDETAILS | length) %}{{ IRONIC.IRONIC_SWITCHDETAILS[i].username }} {%endfor%}"
IRONIC_SWITCH_PASSWORD: "{% for i in range(0, IRONIC.IRONIC_SWITCHDETAILS | length) %}{{ IRONIC.IRONIC_SWITCHDETAILS[i].password }} {%endfor%}"
IRONIC_SWITCH_SSH_IP: "{% for i in range(0, IRONIC.IRONIC_SWITCHDETAILS | length) %}{{ IRONIC.IRONIC_SWITCHDETAILS[i].ssh_ip }} {%endfor%}"
{% endif %}
{% endif %}
{% endif %}

{% if OPTIONAL_SERVICE_LIST is defined %}
{% if 'taas' in OPTIONAL_SERVICE_LIST %}
TAAS_ENABLE: "True"
{% endif %}
{% endif %}

{% if BASE_MACADDRESS is defined %}
BASE_MACADDRESS: {{ BASE_MACADDRESS }}
{% endif %}
