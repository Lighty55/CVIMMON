# First remove the new container and artifacts
- name: Shut off neutron server docker service
  service:
    name: docker-neutronsrv
    enabled: no
    state: stopped
  ignore_errors: true
  failed_when: false

- name: Remove neutron server service file
  file:
    path: "/usr/lib/systemd/system/docker-neutronsrv.service"
    state: absent

- name: Systemctl daemon-reload.
  command: /usr/bin/systemctl daemon-reload

- name: Stop and remove neutron server docker container.
  docker_container:
    image: "{{ item.image }}"
    name: "{{ item.name }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"
  with_items:
    - { image: "", name: "neutron_server_{{ docker.neutron_server.image_tag }}" }

- name: Remove neutron server docker image
  docker_image:
    name: "{{ docker.common.registry }}/{{ docker.neutron_server.name }}"
    tag: "{{ docker.neutron_server.image_tag }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"

# Now list and remove neutron server volume contents
- name: List neutron server volume contents
  shell: ls -A1 /docker/neutron_server/
  register: contents

- name: Remove neutron server volume contents
  file:
    path: /docker/neutron_server/{{ item }}
    state: absent
  with_items: "{{ contents.stdout_lines }}"


#  Recover the neutron server volume contents
- name: recover neutron server volume contents
  shell: cp /docker/neutron_server_{{ NEUTRON_SERVER_PREVIOUS_TAG }}/* /docker/neutron_server/.

# Now remove the backup volume
- name: Remove back up neutron server Directory
  file:
    path: "/docker/neutron_server_{{ NEUTRON_SERVER_PREVIOUS_TAG }}"
    state: absent

##########################################
# Copy and enable Service Manager Definition
##########################################
- name: Copy Containers restart-on-boot files.
  command: cp /docker/neutron_server/docker-neutronsrv.service /usr/lib/systemd/system/docker-neutronsrv.service

- name: Systemctl daemon-reload.
  command: /usr/bin/systemctl daemon-reload

- name: Reset the failures
  shell: systemctl reset-failed

- name: Add aliases to bashrc.
  lineinfile:
    dest: /root/.bashrc
    state: present
    regexp: "alias neutronserver='in_container neutron_server_"
    line: "{{ item }}"
  with_items:
    - alias neutronserver='in_container neutron_server_{{ NEUTRON_SERVER_PREVIOUS_TAG }}'

- name: Start Neutron server container
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - docker-neutronsrv
  tags:
    - reboot-on-failure

- name: Wait for Neutron server to be alive
  wait_for: host={{ NEUTRON_NODE_ADDRESS }} port={{ NEUTRON_SERVER_PORT }}
