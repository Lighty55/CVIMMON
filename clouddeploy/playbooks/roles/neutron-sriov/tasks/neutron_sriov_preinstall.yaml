# Remove the existing legacy sriov service if it exists
- name: Disable legacy sriov servicee
  service:
    name: sriov
    enabled: no
  ignore_errors: true
  failed_when: false

- name: Remove legacy sriov service file
  file:
    path: "/usr/lib/systemd/system/sriov.service"
    state: absent

- name: Systemctl daemon-reload.
  command: /usr/bin/systemctl daemon-reload

- name: Get a list of SRIOV interfaces
  shell: ls /sys/class/net/{{ SRIOV_INTERFACE_NAME }}[0-9]*/device/sriov_numvfs
  register: sriov_intfs
  ignore_errors: true
  failed_when: false

- name: Get a list of FPGA interfaces
  shell: ls /sys/class/net/{{ FPGA_INTERFACE_NAME }}[0-9]*/device/sriov_numvfs
  register: fpga_intfs
  ignore_errors: true
  failed_when: false

- name: Create udev rules for allocate sriov vfs
  template:
     src: 75-allocate-sriov-vfs.rules.j2
     dest: /etc/udev/rules.d/75-allocate-sriov-vfs.rules
     mode: "0644"
  when: sriov_intfs.stdout_lines | length > 0 or fpga_intfs.stdout_lines | length > 0

- name: Reload udev rules for allocate sriov vfs
  shell: udevadm control --reload-rules
  when: sriov_intfs.stdout_lines | length > 0 or fpga_intfs.stdout_lines | length > 0

- name: Trigger udev rules for allocate sriov vfs
  shell: udevadm trigger --attr-match=subsystem=net && udevadm settle
  when: sriov_intfs.stdout_lines | length > 0 or fpga_intfs.stdout_lines | length > 0

- name: Check SRIOV interfaces' VFs after udev rules trigger
  shell: cat {{ item }}
  register: chk_sriov_vfs
  retries: 10
  delay: 3
  until: chk_sriov_vfs.stdout | int == intel_sriov_vfs
  with_items: "{{ sriov_intfs.stdout_lines }}"
  when: sriov_intfs.stdout_lines | length > 0

- name: Check FPGA interfaces' VFs after udev rules trigger
  shell: cat {{ item }}
  register: chk_vc_sriov_vfs
  retries: 10
  delay: 3
  until: chk_vc_sriov_vfs.stdout | int == intel_vc_sriov_vfs
  with_items: "{{ fpga_intfs.stdout_lines }}"
  when: fpga_intfs.stdout_lines | length > 0

- name: Get a list of SRIOV interfaces
  shell: ls /sys/class/net/ | awk '/^{{ SRIOV_INTERFACE_NAME }}[0-9]+$/'
  register: sriov_int
  when: vic_nic_combo

- name: Log current state of UDP port numbers for RSS hashing
  shell: ethtool -n {{ item.1 }} rx-flow-hash {{ item.0 }}
  register: output
  with_nested:
    - ['udp4', 'udp6']
    - "{{ sriov_int.stdout_lines }}"
  when: vic_nic_combo and sriov_int.stdout_lines | length > 0

- debug: msg="{{ output }}"
  when: vic_nic_combo

- name: Enable UDP v4 port numbers in RSS hashing
  shell: ethtool -N {{ item.1 }} rx-flow-hash {{ item.0 }} sdfn
  with_nested:
    - ['udp4', 'udp6']
    - "{{ sriov_int.stdout_lines }}"
  when: vic_nic_combo and sriov_int.stdout_lines | length > 0

- name: Persistently enable UDP port numbers in RSS hashing
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ item }}
    state: present
    regexp: '^ETHTOOL_OPTS=*'
    line: 'ETHTOOL_OPTS=" -N ${DEVICE} rx-flow-hash udp4 sdfn; -N ${DEVICE} rx-flow-hash udp6 sdfn"'
  with_items: "{{ sriov_int.stdout_lines }}"
  when: vic_nic_combo and sriov_int.stdout_lines | length > 0

# TODO: For now, duplicate code from above except for N3000 card. Consider
#       consolidating the code.
- name: Get a list of FPGA interfaces
  shell: ls /sys/class/net/ | awk '/^{{ FPGA_INTERFACE_NAME }}[0-9]+$/'
  register: fpga_int
  when: vic_nic_combo

- name: Log current state of UDP port numbers for RSS hashing
  shell: ethtool -n {{ item.1 }} rx-flow-hash {{ item.0 }}
  register: output
  with_nested:
    - ['udp4', 'udp6']
    - "{{ fpga_int.stdout_lines }}"
  when: vic_nic_combo and fpga_int.stdout_lines | length > 0

- debug: msg="{{ output }}"
  when: vic_nic_combo

- name: Enable UDP v4 port numbers in RSS hashing
  shell: ethtool -N {{ item.1 }} rx-flow-hash {{ item.0 }} sdfn
  with_nested:
    - ['udp4', 'udp6']
    - "{{ fpga_int.stdout_lines }}"
  when: vic_nic_combo and fpga_int.stdout_lines | length > 0

- name: Persistently enable UDP port numbers in RSS hashing
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ item }}
    state: present
    regexp: '^ETHTOOL_OPTS=*'
    line: 'ETHTOOL_OPTS=" -N ${DEVICE} rx-flow-hash udp4 sdfn; -N ${DEVICE} rx-flow-hash udp6 sdfn"'
  with_items: "{{ fpga_int.stdout_lines }}"
  when: vic_nic_combo and fpga_int.stdout_lines | length > 0
