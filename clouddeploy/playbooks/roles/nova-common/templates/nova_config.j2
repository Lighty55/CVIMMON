ADMIN_USER: {{ ADMIN_USER }}
ADMIN_TENANT_NAME: {{ ADMIN_TENANT_NAME }}
SERVICE_TENANT_NAME: {{ SERVICE_TENANT_NAME }}
NOVA_DB_USER: {{ NOVA_DB_USER }}
NOVA_DB_NAME: {{ NOVA_DB_NAME }}
NOVA_API_DB_NAME: {{ NOVA_API_DB_NAME }}
MARIADB_SERVICE_HOST: {{ MARIADB_SERVICE_HOST | ipwrap }}
NOVA_KEYSTONE_USER: {{ NOVA_KEYSTONE_USER }}
NOVA_PLACEMENT_USER: {{ NOVA_PLACEMENT_USER }}
KEYSTONE_API_VERSION: {{ KEYSTONE_API_VERSION }}
KEYSTONE_PUBLIC_SERVICE_HOST: {{ KEYSTONE_PUBLIC_SERVICE_HOST }}
KEYSTONE_PUBLIC_SERVICE_PORT: {{ KEYSTONE_PUBLIC_SERVICE_PORT }}
KEYSTONE_ADMIN_SERVICE_HOST: {{ KEYSTONE_ADMIN_SERVICE_HOST }}
KEYSTONE_ADMIN_SERVICE_PORT: {{ KEYSTONE_ADMIN_SERVICE_PORT }}
PUBLIC_PROTOCOL: {{ PUBLIC_PROTOCOL }}
INTERNAL_PROTOCOL: {{ INTERNAL_PROTOCOL }}
RABBITMQ_USER: {{ RABBITMQ_USER }}
RABBITMQ_HOSTS: {{ RABBITMQ_HOSTS }}
GLANCE_API_SERVICE_HOST: {{ GLANCE_API_SERVICE_HOST }}
NETWORK_MANAGER: {{ NETWORK_MANAGER }}
PUBLIC_INTERFACE: {{ PUBLIC_INTERFACE }}
FLAT_INTERFACE: {{ FLAT_INTERFACE }}
NEUTRON_SHARED_SECRET: {{ NEUTRON_SHARED_SECRET }}
NEUTRON_URL: {{ NEUTRON_URL }}
NEUTRON_KEYSTONE_USER: {{ NEUTRON_KEYSTONE_USER }}
VERBOSE_LOGGING: {{ NOVA_VERBOSE_LOGGING }}
DEBUG_LOGGING: {{ NOVA_DEBUG_LOGGING }}
LOGGING_FORMAT_PLAIN: "{{ LOGGING_FORMAT_PLAIN }}"
LOGGING_FORMAT_JSON: "{{ LOGGING_FORMAT_JSON }}"
NOVA_CPU_ALLOCATION_RATIO: {{ nova_cpu_allocation_ratio }}
NOVA_RAM_ALLOCATION_RATIO: {{ nova_ram_allocation_ratio }}
NOVA_HOST: {{ NOVA_HOST }}
NOVA_API_SERVICE_HOST: {{ NOVA_API_SERVICE_HOST }}
NOVA_EC2_API_SERVICE_HOST: {{ NOVA_EC2_API_SERVICE_HOST }}
SECRET_UUID: {{ SECRET_UUID }}
CEPH_CINDER_USER: {{ CEPH_CINDER_USER }}
MEMCACHED_SERVERS: "{{ MEMCACHED_SERVERS }}"
MECHANISM_DRIVERS: "{{ MECHANISM_DRIVERS }}"
ENABLE_JUMBO_FRAMES: "{{ ENABLE_JUMBO_FRAMES | default(False) }}"
MAX_MTU_SIZE: "{{ MAX_MTU_SIZE }}"
{% if UCSMCOMMON is defined %}
{% if UCSMCOMMON['ENABLE_UCSM_PLUGIN'] is defined %}
{% if UCSMCOMMON['ENABLE_UCSM_PLUGIN'] == true %}
UCSM_IP: "{{ UCSMCOMMON.ucsm_ip }}"
UCSM_PASSWORD: "{{ UCSMCOMMON.ucsm_password }}"
UCSM_USERNAME: "{{ UCSMCOMMON.ucsm_username }}"
{% if UCSMCOMMON['ENABLE_PROV_FI_PIN'] is defined  and UCSMCOMMON['ENABLE_PROV_FI_PIN'] == true %}
UCSM_PROV_PIN: "True"
{% endif %}
{% endif %}
{% endif %}
{% endif %}
NFVIMON: {{ nfvimon }}
INTEL_SRIOV: {{ intel_sriov }}
VIC_NIC_COMBO: {{ vic_nic_combo }}
{% if intel_sriov == true %}
USE_SAME_PHYSNET: {{ USE_SAME_PHYSNET }}
SRIOV_INTERFACE_NAME: {{ SRIOV_INTERFACE_NAME }}
SRIOV_PHYSNET_NAME: {{ SRIOV_PHYSNET_NAME }}
SRIOV_PHYSNET_MAPPINGS: {{ sriov_physnet_mappings }}
SRIOV_PHYS_PORTS: {{ sriov_phys_ports }}
FPGA_VENDOR_ID: {{ FPGA_VENDOR_ID }}
FPGA_PF_DEVICE_ID: {{ FPGA_PF_DEVICE_ID }}
FPGA_VF_DEVICE_ID: {{ FPGA_VF_DEVICE_ID }}
FPGA_VF_ALIAS_NAME: {{ FPGA_VF_ALIAS_NAME }}
FPGA_INTERFACE_NAME: {{ FPGA_INTERFACE_NAME }}
FPGA_PHYSNET_NAME: {{ FPGA_PHYSNET_NAME }}
FPGA_PHYSNET_MAPPINGS: {{ fpga_physnet_mappings }}
FPGA_PHYS_PORTS: {{ fpga_phys_ports }}
VENDOR_ID: "{{ VENDOR_ID }}"
{% endif %}
{% if VAULT is defined and VAULT.enabled == True %}
# VAULT
VAULT_TOKEN: {{ TOKEN }}
MGMT_IP: {{ build_node_ip | ipwrap }}
PASSWORD_VARS: {{ PASSWORD_VARS }}
{% else %}
ADMIN_USER_PASSWORD: {{ ADMIN_USER_PASSWORD }}
NOVA_DB_PASSWORD: {{ NOVA_DB_PASSWORD }}
DB_ROOT_PASSWORD: {{ DB_ROOT_PASSWORD }}
NOVA_KEYSTONE_PASSWORD: {{ NOVA_KEYSTONE_PASSWORD }}
NEUTRON_KEYSTONE_PASSWORD: {{ NEUTRON_KEYSTONE_PASSWORD }}
METADATA_PROXY_SHARED_SECRET: {{ METADATA_PROXY_SHARED_SECRET }}
RABBITMQ_PASSWORD: {{ RABBITMQ_PASSWORD }}
VOLUME_ENCRYPTION_KEY: {{ VOLUME_ENCRYPTION_KEY }}
{% endif %}

CEILOMETER_ENABLED: {% if NFVIMON is defined or (OPTIONAL_SERVICE_LIST is defined and 'ceilometer' in OPTIONAL_SERVICE_LIST) -%} True {%- else -%} False {%- endif %}

{% if NFVIMON is defined or (OPTIONAL_SERVICE_LIST is defined and 'ceilometer' in OPTIONAL_SERVICE_LIST) %}
INSTANCE_USAGE_AUDIT: "True"
INSTANCE_USAGE_AUDIT_PERIOD: hour
NOTIFY_ON_STATE_CHANGE: vm_and_task_state
{% endif %}

NOVA_OPT_FOR_LOW_LATENCY: {{ NOVA_OPT_FOR_LOW_LATENCY }}
{% if 'rx_tx_queue_size' in SERVERS[ansible_nodename] %}
RX_TX_QUEUE_SIZE: {{ SERVERS[ansible_nodename]['rx_tx_queue_size'] }}
{% else %}
RX_TX_QUEUE_SIZE: {{ RX_TX_QUEUE_SIZE }}
{% endif %}
{% if 'trusted_vf' in SERVERS[ansible_nodename] %}
{% if SERVERS[ansible_nodename]['trusted_vf'] == True %}
TRUSTED_VF: True
{% endif %}
{% endif %}
WORKERS: {{ WORKERS }}
GPU_VENDOR_ID : {{ GPU_VENDOR_ID }}
GPU_PRODUCT_ID: {{ GPU_PRODUCT_ID }}
GPU_DEVICE_TYPE: {{ GPU_DEVICE_TYPE }}
GPU_ALIAS_NAME: {{ GPU_ALIAS_NAME }}
{% if 'hardware_info' in SERVERS[ansible_nodename] %}
{% if 'NUM_GPU_CARDS' in SERVERS[ansible_nodename]['hardware_info'] %}
{% if SERVERS[ansible_nodename]['hardware_info']['NUM_GPU_CARDS'] > 0 %}
{% if 'VGPU_TYPE' in SERVERS[ansible_nodename]['hardware_info'] %}
{% set vgpu_type = SERVERS[ansible_nodename]['hardware_info']['VGPU_TYPE'] %}
VGPU_TYPE: {{ NVIDIA_T4_VGPU_TYPES[vgpu_type] }}
{% else %}
GPU_NODE: True
{% endif %}
{% endif %}
{% endif %}
{% endif %}

RELEASE_TAG: {{ RELEASE_TAG }}
