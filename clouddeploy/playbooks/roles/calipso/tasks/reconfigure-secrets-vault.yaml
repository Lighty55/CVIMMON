- name: Reconf vault | Check if calipso-mongo container is running
  shell: docker ps -a | grep Up | grep calipso_mongo_{{ docker.calipso_mongo.image_tag }} | cut -f1 -d " "
  register: calipso_mongo_running

# Lookup plugin doesn't ignore_error. Following is the workaround
- name: Reconf vault | Fetch old calipso passwords
  environment:
    VAULT_ADDR: http://{{ build_node_ip | ipwrap }}:8200
  shell: vault kv get -field=value secret/cvim-secrets/CALIPSO_API_SERVICE_PWD
  register: CALIPSO_API_SERVICE_OLD_PWD
  delegate_to: localhost
  run_once: true
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: False

- name: Reconf vault | Fetch old calipso passwords
  environment:
    VAULT_ADDR: http://{{ build_node_ip | ipwrap }}:8200
  shell: vault kv get -field=value secret/cvim-secrets/CALIPSO_MONGO_SERVICE_PWD
  register: CALIPSO_MONGO_SERVICE_OLD_PWD
  delegate_to: localhost
  run_once: true
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: False

## calipso-mongo

- name: Reconf vault | calipso-mongo | Generate the reconfig credentials
  command: docker exec calipso_mongo_{{ docker.calipso_mongo.image_tag }} python /opt/kolla/lookup_secrets.py -t {{ TOKEN }} -m {{ build_node_ip | ipwrap }} -o reconfig -c {{ PASSWORD_VARS }}
  when: calipso_mongo_running.stdout != ""

- name: Reconf vault | calipso-mongo | Compare the credentials
  command: docker exec calipso_mongo_{{ docker.calipso_mongo.image_tag }} diff /opt/kolla/install_secrets.yaml /opt/kolla/reconfig_secrets.yaml
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: False
  register: secrets_result
  when: calipso_mongo_running.stdout != ""

- name: Reconf vault | calipso-mongo | Copy reconfig secrets file
  command: docker exec calipso_mongo_{{ docker.calipso_mongo.image_tag }} mv /opt/kolla/reconfig_secrets.yaml /opt/kolla/install_secrets.yaml
  when: secrets_result|changed and secrets_result.stdout != ""


### calipso-api

- name: Reconf vault | calipso-api | Check if calipso-api container is running
  shell: docker ps -a | grep Up | grep calipso_api_{{ docker.calipso_api.image_tag }} | cut -f1 -d " "
  register: calipso_api_running

- name: Reconf vault | calipso-api | Generate the reconfig credentials
  command: docker exec calipso_api_{{ docker.calipso_api.image_tag }} python /opt/kolla/lookup_secrets.py -t {{ TOKEN }} -m {{ build_node_ip | ipwrap }} -o reconfig -c {{ PASSWORD_VARS }}
  when: calipso_api_running.stdout != ""

- name: Reconf vault | calipso-api | Compare the credentials
  command: docker exec calipso_api_{{ docker.calipso_api.image_tag }} diff /opt/kolla/install_secrets.yaml /opt/kolla/reconfig_secrets.yaml
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: False
  register: secrets_result
  when: calipso_api_running.stdout != ""

- name: Reconf vault | calipso-api | Copy reconfig secrets file
  command: docker exec calipso_api_{{ docker.calipso_api.image_tag }} mv /opt/kolla/reconfig_secrets.yaml /opt/kolla/install_secrets.yaml
  when: secrets_result|changed and secrets_result.stdout != ""


### calipso-scan

- name: Reconf vault | calipso-scan | Check if calipso-scan container is running
  shell: docker ps -a | grep Up | grep calipso_scan_{{ docker.calipso_scan.image_tag }} | cut -f1 -d " "
  register: calipso_scan_running

- name: Reconf vault | calipso-scan | Generate the reconfig credentials
  command: docker exec calipso_scan_{{ docker.calipso_scan.image_tag }} python /opt/kolla/lookup_secrets.py -t {{ TOKEN }} -m {{ build_node_ip | ipwrap }} -o reconfig -c {{ PASSWORD_VARS }}
  when: calipso_scan_running.stdout != ""

- name: Reconf vault | calipso-scan | Compare the credentials
  command: docker exec calipso_scan_{{ docker.calipso_scan.image_tag }} diff /opt/kolla/install_secrets.yaml /opt/kolla/reconfig_secrets.yaml
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: False
  register: secrets_result
  when: calipso_scan_running.stdout != ""

- name: Reconf vault | calipso-scan | Copy reconfig secrets file
  command: docker exec calipso_scan_{{ docker.calipso_scan.image_tag }} mv /opt/kolla/reconfig_secrets.yaml /opt/kolla/install_secrets.yaml
  when: secrets_result|changed and secrets_result.stdout != ""


- set_fact:
    CALIPSO_MONGO_SERVICE_PWD: '{{ lookup("hashi_vault", "secret=secret/data/cvim-regen-secrets/CALIPSO_MONGO_SERVICE_PWD:data
  token={{ TOKEN }} url=http://{{ build_node_ip | ipwrap }}:8200")["value"]}}'
    CALIPSO_API_SERVICE_PWD: '{{ lookup("hashi_vault", "secret=secret/data/cvim-regen-secrets/CALIPSO_API_SERVICE_PWD:data
  token={{ TOKEN }} url=http://{{ build_node_ip | ipwrap }}:8200")["value"]}}'
  delegate_to: localhost
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"

- set_fact:
    calipso_mongo_old_pwd: "{{ CALIPSO_MONGO_SERVICE_OLD_PWD.stdout }}"
  when: calipso_mongo_running.stdout != "" and CALIPSO_MONGO_SERVICE_OLD_PWD.changed

- set_fact:
    calipso_mongo_restart: True
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  when: calipso_mongo_running.stdout != "" and calipso_mongo_old_pwd != CALIPSO_MONGO_SERVICE_PWD

- name: Reconf vault | Write new password to engine
  environment:
    VAULT_ADDR: http://{{ build_node_ip | ipwrap }}:8200
  shell: vault kv put secret/cvim-secrets/CALIPSO_MONGO_SERVICE_PWD value={{ CALIPSO_MONGO_SERVICE_PWD }}
  delegate_to: localhost
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  run_once: True
  when: CALIPSO_MONGO_SERVICE_OLD_PWD.stdout == "" or CALIPSO_MONGO_SERVICE_OLD_PWD.stdout != CALIPSO_MONGO_SERVICE_PWD

- name: Reconf vault | Write new password to engine
  environment:
    VAULT_ADDR: http://{{ build_node_ip | ipwrap }}:8200
  shell: vault kv put secret/cvim-secrets/CALIPSO_API_SERVICE_PWD value={{ CALIPSO_API_SERVICE_PWD }}
  delegate_to: localhost
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  run_once: True
  when: CALIPSO_API_SERVICE_OLD_PWD.stdout == "" or CALIPSO_API_SERVICE_OLD_PWD.stdout != CALIPSO_API_SERVICE_PWD
