- name: Copy the new cinder backup configuration file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  with_items:
    - { src: "cinder_backup_config.j2", dest: "{{docker.cinder_backup.host_data_dir }}/cinder_backup_reconfigure" }

- name: Compare old and new rendered template
  command: diff /docker/cinder_backup/cinder_backup_config /docker/cinder_backup/cinder_backup_reconfigure
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
  ignore_errors: True
  failed_when: false
  register: command_result

# If there is a diff there is a need to reconfigure
- name: Copy the new render config
  command: mv /docker/cinder_backup/cinder_backup_reconfigure /docker/cinder_backup/cinder_backup_config
  when: command_result.stdout != ""

# Remove the reconfigure file when there is no diff
- name: Remove reconfigure file
  file: path=/docker/cinder_backup/cinder_backup_reconfigure state=absent
  when: command_result.stdout == ""

# Now delete the template file inside the container
- name: Delete the cinder backup config file inside container to force a reconfigure
  command: docker cp /docker/cinder_backup/cinder_backup_config cinderbackup_{{ docker.cinder_backup.image_tag }}:/opt/kolla/cinder_backup_config
  when: command_result.stdout != ""

- include: configure_cacert.yaml
  when: SWIFTSTACK_PROTOCOL == 'https'

# Now restart the service
- name: Restart cinder backup service
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  with_items:
    - docker-cinderbackup
  when: command_result.stdout != "" or push_cacert is defined

- pause: seconds=5 prompt="Pause for 5 seconds for container to start"
  when: command_result.stdout != "" or push_cacert is defined

- name: Check if cinder backup Docker container has started running
  shell: docker ps -a | grep Up | grep cinderbackup_{{ docker.cinder_backup.image_tag }} | cut -f1 -d " "
  register: container_status
  when: command_result.stdout != "" or push_cacert is defined

- name: Fail if container is not UP.
  fail: msg="cinder backup Container does not seem to be running"
  when: (container_status is defined and container_status.stdout == "")

