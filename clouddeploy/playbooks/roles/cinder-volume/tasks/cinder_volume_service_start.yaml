- name: Check if docker service is already running
  shell: docker ps -a | grep Up | grep cindervolume_{{ docker.cinder_volume.image_tag }} | cut -f1 -d " "
  register: command_result

- name: Set fact if cinder is already deployed
  set_fact:
    cinder_deployed: True
  when: command_result.stdout == ""

- name: Add aliases to bashrc.
  lineinfile:
    dest: /root/.bashrc
    state: present
    regexp: "alias cindervolume='in_container cindervolume_"
    line: "{{ item }}"
  with_items:
    - alias cindervolume='in_container cindervolume_{{ docker.cinder_volume.image_tag }}'

- name: Start the Cinder Volume Docker Service for netapp
  docker_container:
    name: "cindervolume_{{ docker.cinder_volume.image_tag }}"
    image: "{{ docker.common.registry }}/{{ docker.cinder_volume.name }}:{{ docker.cinder_volume.image_tag }}"
    cpuset_cpus: "{{ hostcpus }}"
    volumes:
        - "{{ docker.cinder_volume.host_data_dir }}:{{ docker.cinder_volume.host_data_dir }}:ro,z"
        - /dev:/dev
        - /etc/iscsi/:/etc/iscsi/
        - /etc/localtime:/etc/localtime:ro
        - /var/log/cinder:/var/log/cinder:z
    interactive: yes
    timeout: "{{ DOCKER_API_TIMEOUT }}"
    ports: "8776:8776"
    network_mode: "host"
    privileged: yes
    ulimits: "nofile:{{ CINDER_VOLUME_ULIMIT }}:{{ CINDER_VOLUME_ULIMIT }}"

  when: command_result.stdout == "" and NETAPP is defined

- name: Start the Cinder Volume Docker Service for ceph
  docker_container:
    name: "cindervolume_{{ docker.cinder_volume.image_tag }}"
    image: "{{ docker.common.registry }}/{{ docker.cinder_volume.name }}:{{ docker.cinder_volume.image_tag }}"
    cpuset_cpus: "{{ hostcpus }}"
    volumes:
        - "{{ docker.cinder_volume.host_data_dir }}:{{ docker.cinder_volume.host_data_dir }}:ro,z"
        - /dev:/dev
        - /etc/iscsi/:/etc/iscsi/
        - /etc/localtime:/etc/localtime:ro
        - /var/log/cinder:/var/log/cinder:z
        - cinder:/var/lib/cinder
    interactive: yes
    timeout: "{{ DOCKER_API_TIMEOUT }}"
    ports: "8776:8776"
    network_mode: "host"
    ulimits: "nofile:{{ CINDER_VOLUME_ULIMIT }}:{{ CINDER_VOLUME_ULIMIT }}"
  when: command_result.stdout == "" and NETAPP is not defined and SOLIDFIRE is not defined and ZADARA is not defined

- name: Start the Cinder Volume Docker Service for ceph/solidfire or Zadara
  docker_container:
    name: "cindervolume_{{ docker.cinder_volume.image_tag }}"
    image: "{{ docker.common.registry }}/{{ docker.cinder_volume.name }}:{{ docker.cinder_volume.image_tag }}"
    cpuset_cpus: "{{ hostcpus }}"
    volumes:
        - "{{ docker.cinder_volume.host_data_dir }}:{{ docker.cinder_volume.host_data_dir }}:ro,z"
        - /dev:/dev:z
        - /etc/iscsi/:/etc/iscsi/:z
        - /etc/localtime:/etc/localtime:ro
        - /var/log/cinder:/var/log/cinder:z
        - cinder:/var/lib/cinder:z
    interactive: yes
    timeout: "{{ DOCKER_API_TIMEOUT }}"
    ports: "8776:8776"
    network_mode: "host"
    privileged: true
    ulimits: "nofile:{{ CINDER_VOLUME_ULIMIT }}:{{ CINDER_VOLUME_ULIMIT }}"
  when: command_result.stdout == "" and (SOLIDFIRE is defined or ZADARA is defined)

- pause: seconds=5 prompt="Waiting for sometime to validate container status"

- name: Check if Cinder Volume Docker container has started running
  shell: docker ps -a | grep Up | grep cindervolume_{{ docker.cinder_volume.image_tag }} | cut -f1 -d " "
  register: command_result

- name: Try starting the container again in case it has failed.
  command: docker start cindervolume_{{ docker.cinder_volume.image_tag }}
  when: command_result.stdout == ""

- pause: seconds=5 prompt="Waiting for sometime to validate container status"
  when: command_result.stdout == ""

- name: Check if Cinder Volume Docker container has started running
  shell: docker ps -a | grep Up | grep cindervolume_{{ docker.cinder_volume.image_tag }} | cut -f1 -d " "
  register: command_result

- name: Fail if container is not UP.
  fail: msg="Cinder Volume Container does not seem to be running"
  when: command_result.stdout == ""

# For netapp and TLS support we need to copy the ca cert into the trusted location
- name: TLS support for netapp
  shell: docker cp /docker/cinder_volume/netapp-ca.crt cindervolume_{{ docker.cinder_volume.image_tag }}:/etc/pki/ca-trust/source/anchors
  when: NETAPP is defined and NETAPP.netapp_cert_file is defined and cinder_deployed is defined and cinder_deployed == True

# Now update the trust
- name: Update trust
  shell: docker exec -u root cindervolume_{{ docker.cinder_volume.image_tag }} update-ca-trust extract
  when: NETAPP is defined and NETAPP.netapp_cert_file is defined and cinder_deployed is defined and cinder_deployed == True

- name: Restart the container for this to be picked up.
  command: docker restart cindervolume_{{ docker.cinder_volume.image_tag }}
  when: NETAPP is defined and NETAPP.netapp_cert_file is defined and cinder_deployed is defined and cinder_deployed == True

- pause: seconds=5 prompt="Waiting for sometime to validate container status"
  when: command_result.stdout == ""

- name: Check if Cinder Volume Docker container has started running
  shell: docker ps -a | grep Up | grep cindervolume_{{ docker.cinder_volume.image_tag }} | cut -f1 -d " "
  register: command_result

- name: Enable Docker Services
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - docker-cindervolume
  tags:
    - reboot-on-failure

- name: Enable the iscsid service
  service:
    name: iscsid
    enabled: yes
    state: started
  when: SOLIDFIRE is defined or ZADARA is defined

- name: Now update the host field for existing volumes
  command: docker exec cindervolume_{{ docker.cinder_volume.image_tag }} cinder-manage volume update_host --currenthost {{ item }}@{{ VOLUME_DRIVER }}#{{ VOLUME_DRIVER }} --newhost {{ VOLUME_DRIVER }}@{{ VOLUME_DRIVER }}#{{ VOLUME_DRIVER }}
  with_items: "{{ groups['controllers'] }}"
  when: ACTION is defined and ACTION == "upgrade"
