- name: Uninstall | Get the ceilometer compute tag
  shell: docker ps -a | grep ceilometercompute | awk '{print $NF}' | cut -f2 -d '_'
  register: ceilometer_compute_tag

- name: Uninstall | Get the ceilometer compute name
  shell: docker images | grep ceilometer-compute | awk '{print $1}' | cut -f2,3 -d '/'
  register: ceilometer_compute_name

- name: Uninstall | Shut off ceilometer compute docker service
  service:
    name: docker-ceilometercompute
    enabled: no
    state: stopped
  ignore_errors: true
  failed_when: false
  no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"

- name: Uninstall | Remove ceilometer compute service file
  file:
    path: "/usr/lib/systemd/system/docker-ceilometercompute.service"
    state: absent

- name: Uninstall | Systemctl daemon-reload
  command: /usr/bin/systemctl daemon-reload

- name: Uninstall | Stop and remove ceilometer compute docker container
  docker_container:
    image: ""
    name: "ceilometercompute_{{ item }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"
  with_items: "{{ ceilometer_compute_tag.stdout_lines }}"

- name: Uninstall | Remove ceilometer compute docker image
  docker_image:
    name: "{{ docker.common.registry }}/{{ ceilometer_compute_name.stdout }}"
    tag: "{{ item }}"
    state: absent
    timeout: "{{ DOCKER_API_TIMEOUT }}"
  with_items: "{{ ceilometer_compute_tag.stdout_lines }}"

- name: Uninstall | Remove ceilometer compute directory
  file:
    path: /docker/ceilometer_compute
    state: absent

# This is the last thing to do to uninstall ceilometer:
# Remove passwords from the secrets.yaml file in mgmt node
- name: Uninstall | Modify CEILOMETER_DB_PASSWORD from the secrets yaml file
  lineinfile: dest={{ lookup('env', 'HOME') }}/openstack-configs/secrets.yaml regexp="^CEILOMETER_DB_PASSWORD" state=absent
  delegate_to: localhost
  run_once: True

- name: Uninstall | Remove CEILOMETER_KEYSTONE_PASSWORD from the secrets yaml file
  lineinfile: dest={{ lookup('env', 'HOME') }}/openstack-configs/secrets.yaml regexp="^CEILOMETER_KEYSTONE_PASSWORD" state=absent
  delegate_to: localhost
  run_once: True

- name: Uninstall | Remove passwords from Vault
  script: remove_passwords.py -t {{ TOKEN }} -m {{ build_node_ip | ipwrap }}
  delegate_to: localhost
  when: VAULT is defined and VAULT.enabled == True
