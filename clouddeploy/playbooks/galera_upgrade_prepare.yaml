- name: Gathering facts from all hosts
  hosts: host_all
  tasks: [ ]

# Disable galera backend in haproxy
- hosts: mariadb_all
  tasks:
  - name: find whether there is a repo update which basically triggers a build world
    command: python /opt/cisco/scripts/check_repoupdate.py {{ playbook_dir }}/../../openstack-configs/update_scope.yaml
    register: update_repo_status
    delegate_to: localhost
    when: ACTION is defined and ACTION == "update"

  - name: Disable galera backend in haproxy
    file:
      path: "/var/tmp/clustercheck.disabled"
      state: touch
    when: (update_repo_status is defined and update_repo_status.stdout is defined and update_repo_status.stdout == "update_repo") or (ACTION is defined and ACTION == "upgrade")

  - name: Check cluster status
    shell: mysql -h {{ internal_lb_vip_address }} -uroot -p{{ DB_ROOT_PASSWORD }} -e "SHOW STATUS LIKE 'wsrep_cluster_size'"
    no_log: "{{ ANSIBLE_SAFE_LOG_OVERRIDE|default(True) }}"
    ignore_errors: True
    failed_when: False
    register: cluster_status
    until: cluster_status.stderr | search("Lost connection to MySQL server")
    retries: 30
    delay: 6
    when: (update_repo_status is defined and update_repo_status.stdout is defined and update_repo_status.stdout == "update_repo") or (ACTION is defined and ACTION == "upgrade")

  - pause: seconds=60 prompt="Waiting for sometime for in-transit transactions"
    when: (update_repo_status is defined and update_repo_status.stdout is defined and update_repo_status.stdout == "update_repo") or (ACTION is defined and ACTION == "upgrade")

  - name: set fact for mariadb reverse host list
    set_fact:
      galera_list: "[{% for host in groups['mariadb_mgmt_ip'] | reverse %}'{{ host }}',{% endfor %}]"
    run_once: True
    when: (update_repo_status is defined and update_repo_status.stdout is defined and update_repo_status.stdout == "update_repo") or (ACTION is defined and ACTION == "upgrade")

  - name: Shut off mariadb docker service
    service:
      name: docker-mariadb
      enabled: no
      state: stopped
    delegate_to: "{{ item }}"
    with_items: "{{ galera_list | default([]) }}"
    run_once: True
    when: (update_repo_status is defined and update_repo_status.stdout is defined and update_repo_status.stdout == "update_repo") or (ACTION is defined and ACTION == "upgrade")
  tags:
    - host-packages
    - update

