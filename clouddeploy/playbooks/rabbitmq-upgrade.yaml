- name: Gathering facts from all hosts
  hosts: host_all
  tasks: [ ]

# Per http://www.rabbitmq.com/clustering.html
# When upgrading from one major or minor version of RabbitMQ to another
# (i.e. from 3.0.x to 3.1.x, or from 2.x.x to 3.x.x), or when upgrading Erlang,
# the whole cluster must be taken down for the upgrade in lock step
# since clusters with mis-matched major or minor versions cannot run mixed versions).
# Issue encountered between upgrade from Liberty to Mitaka
# where minor version changed from 3.3.5-22 to 3.6.3-5
- name: Prepare for Upgrade bring down entire rabbitmq cluster
  hosts: rabbitmq_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{sudo_required }}"
  tasks:
    - include: "{{ playbook_dir }}/roles/rabbitmq/tasks/rabbitmq_service_upgrade_prepare.yaml"
  serial: "30%"
  tags:
    - base
    - rabbitmq

- name: Install and start  RabbitMQ Containarized service.
  hosts: rabbitmq_all
  max_fail_percentage: 0
  user: "{{ remote_user }}"
  become: "{{sudo_required }}"
  roles:
    - { role: "rabbitmq", tags: [ "base", "rabbitmq" ] }
  serial: "30%"

- name: Validate RabbitMQ cluster.
  hosts: opsmonit_all{{server|default('')}}
  user: "{{ remote_user }}"
  become: "{{ sudo_required }}"
  tasks:
    - name: Execute RabbitMQ cluster cmd
      rabbitmq_monit:
        operation: check_cluster_size
        username: "{{ RABBITMQ_USER }}"
        password: "{{ RABBITMQ_PASSWORD }}"
        image_tag: "{{ docker.rabbitmq.image_tag }}"
        clust_sz: "{{ groups['rabbitmq_all'] | length }}"
      register: validation_status
      until: validation_status.result.status == 'PASS'
      retries: 30
      delay: 6
      when: (ACTION is defined and ACTION == "update") or (ACTION is defined and ACTION == "reconfigure")
    - name: Execute RabbitMQ cluster cmd
      rabbitmq_monit:
        operation: check_cluster_size
        username: "{{ RABBITMQ_USER }}"
        password: "{{ RABBITMQ_PASSWORD }}"
        image_tag: "{{ RABBITMQ_PREVIOUS_TAG }}"
        clust_sz: "{{ groups['rabbitmq_all'] | length }}"
      register: validation_status
      until: validation_status.result.status == 'PASS'
      retries: 30
      delay: 6
      when: (ACTION is defined and ACTION == "rollback")
  tags:
    - base
    - rabbitmq
