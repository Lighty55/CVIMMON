! Configuration File for keepalived
global_defs {
    router_id LVS_DEVEL
}
vrrp_script check_apiserver {
    script "/usr/libexec/keepalived/check_apiserver.sh"
    interval 2
    weight -5
    fall 3
    rise 2
}
vrrp_script chk_https_port {
       script "</dev/tcp/127.0.0.1/443"
       interval 1
       weight -2
}
vrrp_instance VI_1 {
    state BACKUP
    interface {{ ansible_br_mgmt.device }}
{% if DHCP_MODE is defined and DHCP_MODE == "v6" %}
    unicast_src_ip {{ ipv6_mgmt_address }}
      unicast_peer {
      {% set ipv6_list = ipv6_mgmt_peers.split(',') %}
         {%- for ipv6 in ipv6_list %}
            {{ ipv6 | replace('[', '') | replace(']', '') | replace('\"', '')}}
         {% endfor -%}
      }
{% else %}
    mcast_src_ip {{ ansible_host }}
{% endif %}
    virtual_router_id {{ VIRTUAL_ROUTER_ID }}
    priority {{ '102' if ansible_usehost == hostvars[groups['all-masters'][0]]['ansible_usehost'] else '100' }}
    advert_int 2
    nopreempt
    authentication {
        auth_type PASS
        auth_pass 4be37dc3b4c90194d1600c483e10ad1d
    }
    virtual_ipaddress {
        {{ internal_loadbalancer_ip }}
    }
    track_script {
       check_apiserver
    }
}
vrrp_instance VI_2 {
    state BACKUP
    interface {{ ansible_br_api.device }}
{% if DHCP_MODE is defined and DHCP_MODE == "v6" %}
    unicast_src_ip {{ ipv6_api_address }}
      unicast_peer {
      {% set ipv6_list = ipv6_peers.split(',') %}
         {%- for ipv6 in ipv6_list %}
            {{ ipv6 | replace('[', '') | replace(']', '') | replace('\"', '')}}
         {% endfor -%}
      }
{% else %}
    mcast_src_ip {{ ansible_host }}
{% endif %}
    virtual_router_id {{ VIRTUAL_ROUTER_ID }}
    priority {{ '102' if ansible_usehost == hostvars[groups['all-masters'][0]]['ansible_usehost'] else '100' }}
    advert_int 2
    nopreempt
    authentication {
        auth_type PASS
        auth_pass 4be37dc3b4c90194d1600c483e10ad1d
    }
    virtual_ipaddress {
        {{ external_loadbalancer_ip }}
    }
    track_script {
       check_apiserver
    }
}
