---
- name: "CVIMMON-Kubernetes-Monitor->Create a Random Password Using Openssl for Prometheus"
  command: openssl rand -base64 32
  register: random_password_prom

- name: "CVIMMON-Kubernetes-Monitor->Create a Encoded Prometheus Secret for using with Kubectl"
  command: htpasswd -bc /tmp/auth admin {{ random_password_prom.stdout }}

- name: "CVIMMON-Kubernetes-Monitor->Get secrets form the namespace and check Prometheus Secret exists"
  shell: kubectl get secrets -n {{ prometheus_namespace }} | grep prometheus-auth-k8s | cat
  register: prom_secret

- name: "CVIMMON-Kubernetes-Monitor->Create Prometheus Secret if not exists in the namespace"
  command: kubectl create secret generic prometheus-auth-k8s -n {{ prometheus_namespace }} --from-file={{ item }}
  with_items:
    - /tmp/auth
  when: "'prometheus-auth-k8s' not in prom_secret.stdout"

- name: "CVIMMON-Kubernetes-Monitor->Replace All Passwords With Kubectl"
  shell: |
     kubectl create secret generic {{ item.0 }} -n {{ prometheus_namespace }} --from-file {{ item.1 }} -o yaml --dry-run | kubectl replace -f -
  with_nested:
    - ['prometheus-auth-k8s']
    - ['/tmp/auth']

- name: "CVIMMON-Kubernetes-Monitor->Delete temporary auth files"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/auth

- name: "CVIMMON-Kubernetes-Monitor->Save the password in secrets file"
  lineinfile:
    dest: "{{ password_file_path }}"
    regexp: '^Prometheus-Password-{{ clustermon_namespace }}\(Username:admin\)'
    line: 'Prometheus-Password-{{ clustermon_namespace }}(Username:admin): {{ random_password_prom.stdout }}'
    create: yes
