---
- name: "CVIMMON-{{ metro_name }}->Create a Random Password Using Openssl for Prometheus"
  command: openssl rand -base64 32
  register: random_password_grafana

- name: "CVIMMON-{{ metro_name }}->Get secrets form the namespace and check Grafana Secret exists"
  shell: kubectl get secrets -n {{ metro_name }} | grep grafana-auth-{{ metro_name }} | cat
  register: grafana_secret

- name: "CVIMMON-{{ metro_name }}->Create Grafana Secret if not exists in the namespace"
  command: kubectl create secret generic grafana-auth-{{ metro_name }} --from-literal=admin-user=admin --from-literal=admin-password={{ random_password_grafana.stdout }} -n {{ metro_name }}
  when: "'grafana-auth-{{ metro_name }}' not in grafana_secret.stdout"

- name: "CVIMMON-{{ metro_name }}->Replace All Passwords With Kubectl"
  shell: |
     kubectl create secret generic grafana-auth-{{ metro_name }} --from-literal=admin-user=admin --from-literal=admin-password={{ random_password_grafana.stdout }} -n {{ metro_name }} -o yaml --dry-run | kubectl replace -f -

- name: "CVIMMON-{{ metro_name }}->Change Grafana Password using CLI"
  shell: |
     kubectl get secret grafana-auth-{{ metro_name }} -n {{ metro_name }} -o jsonpath='{.data.admin-password}' | base64 --decode | xargs -I {} kubectl exec -it -n {{ metro_name }} $(kubectl get pods -n {{ metro_name }} | awk '/grafana/ {print $1;exit}') -- grafana-cli --homepath /usr/share/grafana admin reset-admin-password {}

- name: "CVIMMON-{{ metro_name }}->Save the password in secrets file"
  lineinfile:
    dest: "{{ password_file_path }}"
    regexp: '^Grafana-Password-{{ metro_name }}\(Username:admin\)'
    line: 'Grafana-Password-{{ metro_name }}(Username:admin): {{ random_password_grafana.stdout }}'
    create: yes
