---
- name: "CVIMMON-Kubernetes-Monitor->Create a Random Password Using Openssl for Prometheus"
  command: openssl rand -base64 32
  register: random_password_grafana

- name: "CVIMMON-Kubernetes-Monitor->Get secrets form the namespace and check Grafana Secret exists"
  shell: kubectl get secrets -n {{ clustermon_namespace }} | grep grafana-auth-k8s | cat
  register: grafana_secret

- name: "CVIMMON-Kubernetes-Monitor->Create Grafana Secret if not exists in the namespace"
  command: kubectl create secret generic grafana-auth-k8s --from-literal=admin-user=admin --from-literal=admin-password={{ random_password_grafana.stdout }} -n {{ clustermon_namespace }}
  when: "'grafana-auth-k8s' not in grafana_secret.stdout"

- name: "CVIMMON-Kubernetes-Monitor->Replace All Passwords With Kubectl"
  shell: |
     kubectl create secret generic grafana-auth-k8s --from-literal=admin-user=admin --from-literal=admin-password={{ random_password_grafana.stdout }} -n {{ clustermon_namespace }} -o yaml --dry-run | kubectl replace -f -

- name: "CVIMMON-Kubernetes-Monitor->Change Grafana Password using CLI"
  shell: |
     kubectl get secret grafana-auth-k8s -n {{ clustermon_namespace }} -o jsonpath='{.data.admin-password}' | base64 --decode | xargs -I {} kubectl exec -it -n {{ clustermon_namespace }} $(kubectl get pods -n {{ clustermon_namespace }} | awk '/grafana/ {print $1;exit}') -- grafana-cli --homepath /usr/share/grafana admin reset-admin-password {}

- name: "CVIMMON-Kubernetes-Monitor->Save the password in secrets file"
  lineinfile:
    dest: "{{ password_file_path }}"
    regexp: '^Grafana-Password-{{ clustermon_namespace }}\(Username:admin\)'
    line: 'Grafana-Password-{{ clustermon_namespace }}(Username:admin): {{ random_password_grafana.stdout }}'
    create: yes
